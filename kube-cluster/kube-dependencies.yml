- hosts: all
  become: yes
  tasks:
   - name: Add load balancer entry to /etc/hosts
     lineinfile:
       dest: /etc/hosts
       regexp: "^{{ item['ip'] }}.*$"
       line: "{{ item['ip'] }}\t{{ item['names'] | join(' ') }}"
       state: present
     with_items:
     - ip: 172.31.35.65
       names:
       - kube.box.org
   - name: add hosts entry to /etc/hosts
     lineinfile:
       dest: /etc/hosts
       regexp: "^{{ item }}.*$"
       #line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{ item }}"
       line: "{{ hostvars[item]['ansible_host'] }} {{ item }}"
       state: present
     when: hostvars[item]['ansible_host'] is defined
     with_items:
       - "{{ groups['all'] }}"
   - name: setup hostnames
     hostname:
       name: "{{ inventory_hostname }}"
   - name: Install Docker Dependencies
     yum:
       name: yum-utils, device-mapper-persistent-data, lvm2
       state: present
       update_cache: true
   - name: Add Docker repository
     yum_repository:
       name: DockerRepo
       description: Docker YUM repository
       baseurl: https://download.docker.com/linux/centos/7/x86_64/stable
       gpgkey: https://download.docker.com/linux/centos/gpg     
       gpgcheck: yes
   - name: install Docker
     yum:
       name: docker-ce-18.06.2.ce
       state: present
       update_cache: true
   - name: Creates /etc/docker directory
     file:
       path: /etc/docker
       state: directory
   - name: Create Docker Daemon file
     copy:
       dest: "/etc/docker/daemon.json"
       content: |
         {
           "exec-opts": ["native.cgroupdriver=systemd"],
           "log-driver": "json-file",
           "log-opts": {
             "max-size": "100m"
           },
           "storage-driver": "overlay2",
           "storage-opts": [
             "overlay2.override_kernel_check=true"
           ]
         }
   - name: Creates Docker Daemon directory
     file:
       path: /etc/systemd/system/docker.service.d
       state: directory
       mode: 0777
   - name: enable docker
     systemd:
       name: docker
       enabled: yes
   - name: reload systemd
     command: systemctl daemon-reload
   - name: start Docker
     service:
       name: docker
       state: restarted
   - name: stop firewall
     service: 
       name: firewalld
       state: stopped
   - name: disable firewall
     systemd:
       name: firewalld
       enabled: no
   - name: disable swap
     command: swapoff -a
   - name: set iptables
     shell: update-alternatives --set iptables /usr/sbin/iptables-legacy | cat
     #ignore_errors: true
   - name: disable SELinux
     command: setenforce 0
   - name: disable SELinux on reboot
     selinux:
       state: disabled
   - name: ensure net.bridge.bridge-nf-call-ip6tables is set to 1
     sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: 1
      state: present
   - name: ensure net.bridge.bridge-nf-call-iptables is set to 1
     sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present
   - name: load br_netfilter
     command: modprobe br_netfilter
   - name: add Kubernetes' YUM repository
     yum_repository:
      name: Kubernetes
      description: Kubernetes YUM repository
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      gpgcheck: yes
   - name: install kubelet
     yum:
        name: kubelet
        state: present
        update_cache: true
   - name: install kubeadm
     yum:
        name: kubeadm
        state: present
   - name: start kubelet
     service:
       name: kubelet
       enabled: yes
       state: started
   - name: enable kubelet
     systemd:
       name: kubelet
       enabled: yes
- hosts: masters
  become: yes
  tasks:
    - name: install kubectl
      yum:
        name: kubectl
        state: present
